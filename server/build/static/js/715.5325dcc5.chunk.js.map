{"version":3,"file":"static/js/715.5325dcc5.chunk.js","mappings":"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","sources":["Signup/Signup.jsx"],"sourcesContent":["import { Button, Form, Container, Row, Col, Card } from \"react-bootstrap\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { signupUtil } from \"../apiUtils\";\nimport \"./Signup.css\";\n\nfunction Signup() {\n  // console.log(\"render\");\n  const name = useRef(\"\");\n  const username = useRef(\"\");\n  const password = useRef(\"\");\n\n  const [pwdValidation, setPwdValidation] = useState({\n    lowercase: false,\n    uppercase: false,\n    number: false,\n    symbol: false,\n    length: false,\n  });\n\n  const [isValid, setIsValid] = useState(false);\n\n  const { lowercase, uppercase, number, symbol, length } = pwdValidation;\n\n  // const [password, setPassword] = useState(\"\");\n  // const [username, setUsername] = useState(\"\");\n  // const [name, setName] = useState(\"\");\n\n  useEffect(() => {\n    const isPwdValid = Object.values(pwdValidation).every(Boolean);\n    console.log({ isPwdValid });\n    setIsValid(isPwdValid);\n    // console.log({ isValid });\n  }, [pwdValidation]);\n\n  const validatePasword = (e) => {\n    const password = e.target.value;\n    console.log(password);\n    // regex.test(string)\n    const lowercase = /(?=.*[a-z])/.test(password);\n    const uppercase = /(?=.*[A-Z])/.test(password);\n    const number = /(?=.*\\d)/.test(password);\n    const symbol = /(?=.*[\\W_])/.test(password);\n    const length = password.length >= 8;\n    // setPassword(password);\n    setPwdValidation({ lowercase, uppercase, number, symbol, length });\n  };\n\n  // const signup = async (e) => {\n  //   const payload = { name, username, password };\n  //   try {\n  //     const data = await signupUtil(payload)?.data;\n  //     console.log(data);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n\n  const signup = async (e) => {\n    const payload = {\n      name: name.current.value,\n      username: username.current.value,\n      password: password.current.value,\n    };\n    console.log(payload);\n    try {\n      const data = (await signupUtil(payload))?.data;\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col\n          lg={{ offset: 4, span: 4 }}\n          md={{ offset: 3, span: 6 }}\n          sm={{ offset: 1, span: 10 }}\n        >\n          <Card className=\"mt-3 p-3 signup\">\n            <Card.Title>Signup</Card.Title>\n            <Card.Body>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control placeholder=\"Enter name\" ref={name} />\n              </Form.Group>\n              <Form.Group className=\"mb-3\" controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control placeholder=\"Enter username\" ref={username} />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  onChange={validatePasword}\n                  placeholder=\"Password\"\n                  ref={password}\n                />\n              </Form.Group>\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                disabled={!isValid}\n                onClick={signup}\n              >\n                Signup\n              </Button>\n            </Card.Body>\n            <div className=\"pwd-strength\">\n              <div className={lowercase ? \"text-success\" : \"text-danger\"}>\n                Lowercase character :- a-z\n              </div>\n              <div className={uppercase ? \"text-success\" : \"text-danger\"}>\n                Uppercase character :- A-Z\n              </div>\n              <div className={number ? \"text-success\" : \"text-danger\"}>\n                Numeric character :- 0-9\n              </div>\n              <div className={symbol ? \"text-success\" : \"text-danger\"}>\n                Special character :- !@#$%^&*()_+\n              </div>\n              <div className={length ? \"text-success\" : \"text-danger\"}>\n                Password should consist of 8 or more character\n              </div>\n            </div>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Signup;\n\n// className={lowercase ? \"text-success\" : \"text-danger\"}\n// className={uppercase ? \"text-success\" : \"text-danger\"}\n// className={number ? \"text-success\" : \"text-danger\"}\n// className={symbol ? \"text-success\" : \"text-danger\"}\n// className={length ? \"text-success\" : \"text-danger\"}\n"],"names":["name","useRef","username","password","useState","lowercase","uppercase","number","symbol","length","pwdValidation","setPwdValidation","isValid","setIsValid","useEffect","isPwdValid","Object","values","every","Boolean","console","log","signup","e","payload","current","value","signupUtil","data","Container","fluid","Row","Col","lg","offset","span","md","sm","Card","className","Form","controlId","placeholder","ref","type","onChange","target","test","Button","variant","disabled","onClick"],"sourceRoot":""}