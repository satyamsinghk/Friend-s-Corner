{"version":3,"file":"static/js/670.94b46f66.chunk.js","mappings":"2RAuEA,MA7DA,SAAe,GAAiB,EAAfA,iBAEDC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAFZ,IAI7BC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,QAAO,IAClBC,GAAWD,EAAAA,EAAAA,QAAO,IAElBE,GAAWC,EAAAA,EAAAA,MACFC,GAAaC,EAAAA,EAAAA,MAApBV,MAEFW,EAAK,yCAAG,WAAOC,GAAC,4EACdC,EAAU,CACdT,SAAUA,EAASU,QAAQC,MAC3BT,SAAUA,EAASQ,QAAQC,OAE7BC,QAAQC,IAAIJ,GACZ,IACEX,GAASgB,EAAAA,EAAAA,IAAmBL,IACxBJ,GAAUF,EAASE,EAGzB,CAFE,MAAOU,GACPH,QAAQC,IAAIE,EACd,CAAC,2CACF,gBAZU,sCAcX,OACE,SAACC,EAAA,EAAS,CAACC,OAAK,YACd,SAACC,EAAA,EAAG,WACF,SAACC,EAAA,EAAG,CACFC,GAAI,CAAEC,OAAQ,EAAGC,KAAM,GACvBC,GAAI,CAAEF,OAAQ,EAAGC,KAAM,GACvBE,GAAI,CAAEH,OAAQ,EAAGC,KAAM,IAAK,UAE5B,UAACG,EAAA,EAAI,CAACC,UAAU,kBAAiB,WAC/B,SAACD,EAAA,QAAU,qBACX,UAACA,EAAA,OAAS,YACR,UAACE,EAAA,QAAU,CAACD,UAAU,OAAOE,UAAU,WAAU,WAC/C,SAACD,EAAA,QAAU,wBACX,SAACA,EAAA,UAAY,CAACE,YAAY,iBAAiBC,IAAK9B,QAGlD,UAAC2B,EAAA,QAAU,CAACD,UAAU,OAAOE,UAAU,oBAAmB,WACxD,SAACD,EAAA,QAAU,wBACX,SAACA,EAAA,UAAY,CACXI,KAAK,WACLF,YAAY,WACZC,IAAK5B,QAGT,SAAC8B,EAAA,EAAM,CAACC,QAAQ,UAAUF,KAAK,SAASG,QAAS3B,EAAM,8BASrE,C","sources":["Login/Login.jsx"],"sourcesContent":["import { Button, Form, Container, Row, Col, Card } from \"react-bootstrap\";\nimport React, { useRef } from \"react\";\n// import { loginUtil } from \"../apiUtils\";\n// import {useSelector,useDispatch } from \"react-redux\"\n// import { loginActionCreator } from '../reducers/userReducer';\nimport \"./Login.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loginActionCreator } from \"../reducers/userReducer\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nfunction Login({ handleLoginData }) {\n  // eslint-disable-next-line\n  const state = useSelector((state) => state.user);\n\n  const dispatch = useDispatch();\n\n  const username = useRef(\"\");\n  const password = useRef(\"\");\n\n  const navigate = useNavigate();\n  const { state: prevPath } = useLocation();\n\n  const login = async (e) => {\n    const payload = {\n      username: username.current.value,\n      password: password.current.value,\n    };\n    console.log(payload);\n    try {\n      dispatch(loginActionCreator(payload));\n      if (prevPath) navigate(prevPath);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col\n          lg={{ offset: 4, span: 4 }}\n          md={{ offset: 3, span: 6 }}\n          sm={{ offset: 1, span: 10 }}\n        >\n          <Card className=\"mt-3 p-3 signup\">\n            <Card.Title>Login</Card.Title>\n            <Card.Body>\n              <Form.Group className=\"mb-3\" controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control placeholder=\"Enter username\" ref={username} />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  ref={password}\n                />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\" onClick={login}>\n                Login\n              </Button>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Login;\n"],"names":["handleLoginData","useSelector","state","user","dispatch","useDispatch","username","useRef","password","navigate","useNavigate","prevPath","useLocation","login","e","payload","current","value","console","log","loginActionCreator","error","Container","fluid","Row","Col","lg","offset","span","md","sm","Card","className","Form","controlId","placeholder","ref","type","Button","variant","onClick"],"sourceRoot":""}